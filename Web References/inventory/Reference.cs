//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ApiSampleFramework.inventory {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ApiServiceFxiInventorySoap", Namespace="urn:ApiServiceFxiInventory")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FaxDid))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FaxDidGroup))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FaxCountryState))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FaxCountry))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponse))]
    public partial class ApiServiceFxiInventory : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private UsernameToken usernameTokenValueField;
        
        private System.Threading.SendOrPostCallback listCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listDidGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDidGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback listDidsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ApiServiceFxiInventory() {
            this.Url = global::ApiSampleFramework.Properties.Settings.Default.ApiSampleFramework_inventory_ApiServiceFxiInventory;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public UsernameToken UsernameTokenValue {
            get {
                return this.usernameTokenValueField;
            }
            set {
                this.usernameTokenValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event listCountriesCompletedEventHandler listCountriesCompleted;
        
        /// <remarks/>
        public event listStatesCompletedEventHandler listStatesCompleted;
        
        /// <remarks/>
        public event listDidGroupsCompletedEventHandler listDidGroupsCompleted;
        
        /// <remarks/>
        public event getDidGroupCompletedEventHandler getDidGroupCompleted;
        
        /// <remarks/>
        public event listDidsCompletedEventHandler listDidsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernameTokenValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#listCountries", RequestNamespace="urn:ApiServiceFxiInventory", ResponseNamespace="urn:ApiServiceFxiInventory")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public ApiResponseListCountries listCountries() {
            object[] results = this.Invoke("listCountries", new object[0]);
            return ((ApiResponseListCountries)(results[0]));
        }
        
        /// <remarks/>
        public void listCountriesAsync() {
            this.listCountriesAsync(null);
        }
        
        /// <remarks/>
        public void listCountriesAsync(object userState) {
            if ((this.listCountriesOperationCompleted == null)) {
                this.listCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistCountriesOperationCompleted);
            }
            this.InvokeAsync("listCountries", new object[0], this.listCountriesOperationCompleted, userState);
        }
        
        private void OnlistCountriesOperationCompleted(object arg) {
            if ((this.listCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listCountriesCompleted(this, new listCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernameTokenValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#listStates", RequestNamespace="urn:ApiServiceFxiInventory", ResponseNamespace="urn:ApiServiceFxiInventory")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public ApiResponseListCountryStates listStates(string countryCodeA3) {
            object[] results = this.Invoke("listStates", new object[] {
                        countryCodeA3});
            return ((ApiResponseListCountryStates)(results[0]));
        }
        
        /// <remarks/>
        public void listStatesAsync(string countryCodeA3) {
            this.listStatesAsync(countryCodeA3, null);
        }
        
        /// <remarks/>
        public void listStatesAsync(string countryCodeA3, object userState) {
            if ((this.listStatesOperationCompleted == null)) {
                this.listStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistStatesOperationCompleted);
            }
            this.InvokeAsync("listStates", new object[] {
                        countryCodeA3}, this.listStatesOperationCompleted, userState);
        }
        
        private void OnlistStatesOperationCompleted(object arg) {
            if ((this.listStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listStatesCompleted(this, new listStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernameTokenValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#listDidGroups", RequestNamespace="urn:ApiServiceFxiInventory", ResponseNamespace="urn:ApiServiceFxiInventory")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public ApiResponseListDidGroups listDidGroups(string countryCodeA3, string stateCodeA2) {
            object[] results = this.Invoke("listDidGroups", new object[] {
                        countryCodeA3,
                        stateCodeA2});
            return ((ApiResponseListDidGroups)(results[0]));
        }
        
        /// <remarks/>
        public void listDidGroupsAsync(string countryCodeA3, string stateCodeA2) {
            this.listDidGroupsAsync(countryCodeA3, stateCodeA2, null);
        }
        
        /// <remarks/>
        public void listDidGroupsAsync(string countryCodeA3, string stateCodeA2, object userState) {
            if ((this.listDidGroupsOperationCompleted == null)) {
                this.listDidGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDidGroupsOperationCompleted);
            }
            this.InvokeAsync("listDidGroups", new object[] {
                        countryCodeA3,
                        stateCodeA2}, this.listDidGroupsOperationCompleted, userState);
        }
        
        private void OnlistDidGroupsOperationCompleted(object arg) {
            if ((this.listDidGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listDidGroupsCompleted(this, new listDidGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernameTokenValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getDidGroup", RequestNamespace="urn:ApiServiceFxiInventory", ResponseNamespace="urn:ApiServiceFxiInventory")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public ApiResponseListDidGroups getDidGroup(string groupRef) {
            object[] results = this.Invoke("getDidGroup", new object[] {
                        groupRef});
            return ((ApiResponseListDidGroups)(results[0]));
        }
        
        /// <remarks/>
        public void getDidGroupAsync(string groupRef) {
            this.getDidGroupAsync(groupRef, null);
        }
        
        /// <remarks/>
        public void getDidGroupAsync(string groupRef, object userState) {
            if ((this.getDidGroupOperationCompleted == null)) {
                this.getDidGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDidGroupOperationCompleted);
            }
            this.InvokeAsync("getDidGroup", new object[] {
                        groupRef}, this.getDidGroupOperationCompleted, userState);
        }
        
        private void OngetDidGroupOperationCompleted(object arg) {
            if ((this.getDidGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDidGroupCompleted(this, new getDidGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernameTokenValue")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#listDids", RequestNamespace="urn:ApiServiceFxiInventory", ResponseNamespace="urn:ApiServiceFxiInventory")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public ApiResponseListDids listDids() {
            object[] results = this.Invoke("listDids", new object[0]);
            return ((ApiResponseListDids)(results[0]));
        }
        
        /// <remarks/>
        public void listDidsAsync() {
            this.listDidsAsync(null);
        }
        
        /// <remarks/>
        public void listDidsAsync(object userState) {
            if ((this.listDidsOperationCompleted == null)) {
                this.listDidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDidsOperationCompleted);
            }
            this.InvokeAsync("listDids", new object[0], this.listDidsOperationCompleted, userState);
        }
        
        private void OnlistDidsOperationCompleted(object arg) {
            if ((this.listDidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listDidsCompleted(this, new listDidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class UsernameToken : SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class FaxDid {
        
        private string didRefField;
        
        private string addressRefField;
        
        private string didGroupRefField;
        
        private StateNumber stateField;
        
        private string stateMessageField;
        
        private string didE164Field;
        
        private string didFormattedField;
        
        private string didCountryCodeA3Field;
        
        private string didStateCodeA2Field;
        
        private string didPhoneCodeField;
        
        private string didAreaCodeField;
        
        private string didCityField;
        
        private DidType didTypeField;
        
        private int inboxCountField;
        
        private bool canExtendField;
        
        private bool canRestoreField;
        
        private bool canCancelField;
        
        private System.Nullable<System.DateTime> reservedAtField;
        
        private bool reservedAtFieldSpecified;
        
        private System.Nullable<System.DateTime> reservedTillField;
        
        private bool reservedTillFieldSpecified;
        
        /// <remarks/>
        public string didRef {
            get {
                return this.didRefField;
            }
            set {
                this.didRefField = value;
            }
        }
        
        /// <remarks/>
        public string addressRef {
            get {
                return this.addressRefField;
            }
            set {
                this.addressRefField = value;
            }
        }
        
        /// <remarks/>
        public string didGroupRef {
            get {
                return this.didGroupRefField;
            }
            set {
                this.didGroupRefField = value;
            }
        }
        
        /// <remarks/>
        public StateNumber state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string stateMessage {
            get {
                return this.stateMessageField;
            }
            set {
                this.stateMessageField = value;
            }
        }
        
        /// <remarks/>
        public string didE164 {
            get {
                return this.didE164Field;
            }
            set {
                this.didE164Field = value;
            }
        }
        
        /// <remarks/>
        public string didFormatted {
            get {
                return this.didFormattedField;
            }
            set {
                this.didFormattedField = value;
            }
        }
        
        /// <remarks/>
        public string didCountryCodeA3 {
            get {
                return this.didCountryCodeA3Field;
            }
            set {
                this.didCountryCodeA3Field = value;
            }
        }
        
        /// <remarks/>
        public string didStateCodeA2 {
            get {
                return this.didStateCodeA2Field;
            }
            set {
                this.didStateCodeA2Field = value;
            }
        }
        
        /// <remarks/>
        public string didPhoneCode {
            get {
                return this.didPhoneCodeField;
            }
            set {
                this.didPhoneCodeField = value;
            }
        }
        
        /// <remarks/>
        public string didAreaCode {
            get {
                return this.didAreaCodeField;
            }
            set {
                this.didAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string didCity {
            get {
                return this.didCityField;
            }
            set {
                this.didCityField = value;
            }
        }
        
        /// <remarks/>
        public DidType didType {
            get {
                return this.didTypeField;
            }
            set {
                this.didTypeField = value;
            }
        }
        
        /// <remarks/>
        public int inboxCount {
            get {
                return this.inboxCountField;
            }
            set {
                this.inboxCountField = value;
            }
        }
        
        /// <remarks/>
        public bool canExtend {
            get {
                return this.canExtendField;
            }
            set {
                this.canExtendField = value;
            }
        }
        
        /// <remarks/>
        public bool canRestore {
            get {
                return this.canRestoreField;
            }
            set {
                this.canRestoreField = value;
            }
        }
        
        /// <remarks/>
        public bool canCancel {
            get {
                return this.canCancelField;
            }
            set {
                this.canCancelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> reservedAt {
            get {
                return this.reservedAtField;
            }
            set {
                this.reservedAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool reservedAtSpecified {
            get {
                return this.reservedAtFieldSpecified;
            }
            set {
                this.reservedAtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> reservedTill {
            get {
                return this.reservedTillField;
            }
            set {
                this.reservedTillField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool reservedTillSpecified {
            get {
                return this.reservedTillFieldSpecified;
            }
            set {
                this.reservedTillFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public enum StateNumber {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        PENDING,
        
        /// <remarks/>
        PROCESSING,
        
        /// <remarks/>
        VERIFY_PENDING,
        
        /// <remarks/>
        VERIFY_PROGRESS,
        
        /// <remarks/>
        VERIFY_FAILED,
        
        /// <remarks/>
        ACTIVE,
        
        /// <remarks/>
        EXPIRING,
        
        /// <remarks/>
        EXPIRED,
        
        /// <remarks/>
        CANCELLED,
        
        /// <remarks/>
        ABORTED,
        
        /// <remarks/>
        FAILED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public enum DidType {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        GEOGRAPHIC,
        
        /// <remarks/>
        TOLL_FREE,
        
        /// <remarks/>
        NATIONAL,
        
        /// <remarks/>
        MOBILE,
        
        /// <remarks/>
        INUM,
        
        /// <remarks/>
        SHARED_COST,
        
        /// <remarks/>
        SPECIAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class FaxDidGroup {
        
        private string refIDField;
        
        private string countryCodeA3Field;
        
        private string stateCodeA2Field;
        
        private string cityNameField;
        
        private string phoneCodeField;
        
        private string areaCodeField;
        
        private DidType didTypeField;
        
        private bool isAvailableField;
        
        private bool hasRegulationField;
        
        private DidAddressType didAddressTypeField;
        
        private bool didAddressTypeFieldSpecified;
        
        private bool regProofRequiredField;
        
        /// <remarks/>
        public string refID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        public string countryCodeA3 {
            get {
                return this.countryCodeA3Field;
            }
            set {
                this.countryCodeA3Field = value;
            }
        }
        
        /// <remarks/>
        public string stateCodeA2 {
            get {
                return this.stateCodeA2Field;
            }
            set {
                this.stateCodeA2Field = value;
            }
        }
        
        /// <remarks/>
        public string cityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public string phoneCode {
            get {
                return this.phoneCodeField;
            }
            set {
                this.phoneCodeField = value;
            }
        }
        
        /// <remarks/>
        public string areaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public DidType didType {
            get {
                return this.didTypeField;
            }
            set {
                this.didTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool isAvailable {
            get {
                return this.isAvailableField;
            }
            set {
                this.isAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool hasRegulation {
            get {
                return this.hasRegulationField;
            }
            set {
                this.hasRegulationField = value;
            }
        }
        
        /// <remarks/>
        public DidAddressType didAddressType {
            get {
                return this.didAddressTypeField;
            }
            set {
                this.didAddressTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool didAddressTypeSpecified {
            get {
                return this.didAddressTypeFieldSpecified;
            }
            set {
                this.didAddressTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool regProofRequired {
            get {
                return this.regProofRequiredField;
            }
            set {
                this.regProofRequiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public enum DidAddressType {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        WORLDWIDE,
        
        /// <remarks/>
        NATIONAL,
        
        /// <remarks/>
        LOCAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class FaxCountryState {
        
        private string stateCodeA2Field;
        
        private string countryCodeA3Field;
        
        private string stateNameField;
        
        /// <remarks/>
        public string stateCodeA2 {
            get {
                return this.stateCodeA2Field;
            }
            set {
                this.stateCodeA2Field = value;
            }
        }
        
        /// <remarks/>
        public string countryCodeA3 {
            get {
                return this.countryCodeA3Field;
            }
            set {
                this.countryCodeA3Field = value;
            }
        }
        
        /// <remarks/>
        public string stateName {
            get {
                return this.stateNameField;
            }
            set {
                this.stateNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class FaxCountry {
        
        private string iso2Field;
        
        private string iso3Field;
        
        private bool hasStatesField;
        
        private bool hasRegulationField;
        
        private string phoneCodeField;
        
        /// <remarks/>
        public string iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
            }
        }
        
        /// <remarks/>
        public string iso3 {
            get {
                return this.iso3Field;
            }
            set {
                this.iso3Field = value;
            }
        }
        
        /// <remarks/>
        public bool hasStates {
            get {
                return this.hasStatesField;
            }
            set {
                this.hasStatesField = value;
            }
        }
        
        /// <remarks/>
        public bool hasRegulation {
            get {
                return this.hasRegulationField;
            }
            set {
                this.hasRegulationField = value;
            }
        }
        
        /// <remarks/>
        public string phoneCode {
            get {
                return this.phoneCodeField;
            }
            set {
                this.phoneCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseListDids))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseListDidGroups))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseListCountryStates))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseListCountries))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class ApiResponse {
        
        private StateCodes stateCodeField;
        
        private string stateMessageField;
        
        /// <remarks/>
        public StateCodes stateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string stateMessage {
            get {
                return this.stateMessageField;
            }
            set {
                this.stateMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public enum StateCodes {
        
        /// <remarks/>
        SUCCESS,
        
        /// <remarks/>
        API_FUNCTION_MISSING,
        
        /// <remarks/>
        API_FUNCTION_UNKNOWN,
        
        /// <remarks/>
        API_FUNCTION_ACCESS_DENIED,
        
        /// <remarks/>
        API_AGENT_MISSING,
        
        /// <remarks/>
        API_AGENT_NOT_FOUND,
        
        /// <remarks/>
        API_AGENT_DEACTIVATED,
        
        /// <remarks/>
        API_AGENT_KEY_NOT_MATCH,
        
        /// <remarks/>
        API_CUSTOMER_MISSING,
        
        /// <remarks/>
        API_CUSTOMER_NOT_FOUND,
        
        /// <remarks/>
        API_CUSTOMER_DEACTIVATED,
        
        /// <remarks/>
        API_CUSTOMER_KEY_NOT_MATCH,
        
        /// <remarks/>
        API_CUSTOMER_FEATURE_ACCESS_DENIED,
        
        /// <remarks/>
        API_KEY_MISSING,
        
        /// <remarks/>
        API_KEY_NOT_FOUND,
        
        /// <remarks/>
        API_KEY_DEACTIVATED,
        
        /// <remarks/>
        API_KEY_SECRET_NOT_MATCH,
        
        /// <remarks/>
        API_REQUEST_INCOMPLETE,
        
        /// <remarks/>
        API_REQUEST_FAILURE,
        
        /// <remarks/>
        API_REQUEST_VALIDATE,
        
        /// <remarks/>
        FILE_NOT_FOUND,
        
        /// <remarks/>
        FILE_DELETED,
        
        /// <remarks/>
        FILE_ACCESS_DENIED,
        
        /// <remarks/>
        FILE_STORAGE_MISSING,
        
        /// <remarks/>
        FILE_STORAGE_SIZE_MISMATCH,
        
        /// <remarks/>
        FILE_STORAGE_READ_ERROR,
        
        /// <remarks/>
        FILE_EXISTS,
        
        /// <remarks/>
        CUSTOMER_DELETED,
        
        /// <remarks/>
        CUSTOMER_NOT_CONFIRMED,
        
        /// <remarks/>
        CUSTOMER_BLOCKED,
        
        /// <remarks/>
        CUSTOMER_INACTIVE,
        
        /// <remarks/>
        CUSTOMER_WRONG_PASSWORD,
        
        /// <remarks/>
        CUSTOMER_PASSWORD_NOT_MATCH,
        
        /// <remarks/>
        CUSTOMER_CURRENT_PASSWORD_NOT_MATCH,
        
        /// <remarks/>
        CUSTOMER_EMAIL_IN_USE,
        
        /// <remarks/>
        CUSTOMER_SOCIAL_IN_USE,
        
        /// <remarks/>
        FILE_REFERENCE_DUPLICATE,
        
        /// <remarks/>
        FILE_STORAGE_COPY,
        
        /// <remarks/>
        FILE_INTEGRITY_FAILURE,
        
        /// <remarks/>
        FILE_FORMAT_UNSUPPORTED,
        
        /// <remarks/>
        FILE_FORMAT_EXCEPTION,
        
        /// <remarks/>
        FILE_FORMAT_UNKNOWN,
        
        /// <remarks/>
        FILE_DOWNLOAD_ERROR,
        
        /// <remarks/>
        FILE_VALIDATE_ERROR,
        
        /// <remarks/>
        FILE_OPEN_ERROR,
        
        /// <remarks/>
        FILE_THUMB_ERROR,
        
        /// <remarks/>
        DATABASE_RECORD_SAVE,
        
        /// <remarks/>
        DATABASE_QUERY_EXECUTE,
        
        /// <remarks/>
        DATABASE_QUERY_RESULT_SAVE,
        
        /// <remarks/>
        NUMBER_COUNTRY_UNKNOWN,
        
        /// <remarks/>
        NUMBER_NO_DIALING_RULE,
        
        /// <remarks/>
        NUMBER_NO_PRICE_RULE,
        
        /// <remarks/>
        COUNTRY_WRONG_ISO2,
        
        /// <remarks/>
        COUNTRY_NOT_SUPPORTED,
        
        /// <remarks/>
        COUNTRY_NO_ROUTE,
        
        /// <remarks/>
        EMPTY_RESULT,
        
        /// <remarks/>
        NUMBER_BLOCKED,
        
        /// <remarks/>
        NUMBER_UNOBTAINABLE,
        
        /// <remarks/>
        UNALLOCATED_NUMBER,
        
        /// <remarks/>
        INVALID_NUMBER,
        
        /// <remarks/>
        NUMBER_UNSUPPORTED,
        
        /// <remarks/>
        CALL_ABORTED,
        
        /// <remarks/>
        CALL_REJECTED,
        
        /// <remarks/>
        CALL_PLACE_ERROR,
        
        /// <remarks/>
        CALL_CREATE_ERROR,
        
        /// <remarks/>
        LINE_ATTACH,
        
        /// <remarks/>
        LINE_RESET,
        
        /// <remarks/>
        LINE_CAP_FAX,
        
        /// <remarks/>
        LINE_CAP_VOICE,
        
        /// <remarks/>
        LINE_SET_TSID,
        
        /// <remarks/>
        LINE_UNAUTHORIZED,
        
        /// <remarks/>
        LINE_REQUEST_TIMEOUT,
        
        /// <remarks/>
        DESTINATION_UNREACHIBLE,
        
        /// <remarks/>
        DIALING_ERROR,
        
        /// <remarks/>
        GATEWAY_TIMEOUT,
        
        /// <remarks/>
        ISDN_NETWORK_FAILURE,
        
        /// <remarks/>
        BUSY,
        
        /// <remarks/>
        NO_ANSWER,
        
        /// <remarks/>
        NO_DIAL_TONE,
        
        /// <remarks/>
        RECEIVER_INCOMPATIBLE,
        
        /// <remarks/>
        TEMPORARILY_UNAVAILABLE,
        
        /// <remarks/>
        TRANSMISSION_ABORTED,
        
        /// <remarks/>
        TRANSMISSION_EARLY_HANGUP,
        
        /// <remarks/>
        TRANSMISSION_ERROR,
        
        /// <remarks/>
        NEGOTIATION_FAILED,
        
        /// <remarks/>
        NOT_FAX_MACHINE,
        
        /// <remarks/>
        VOICE_ANSWER,
        
        /// <remarks/>
        DELIVERY_FAILURE,
        
        /// <remarks/>
        MESSAGE_REFERENCE_DUPLICATE,
        
        /// <remarks/>
        FAXJOB_NOT_FOUND,
        
        /// <remarks/>
        FAXJOB_NOT_FAILED,
        
        /// <remarks/>
        FAXJOB_NOT_WAITING,
        
        /// <remarks/>
        FAXTRANSPORT_NOT_FOUND,
        
        /// <remarks/>
        FAXTRANSPORT_NOT_WAITING,
        
        /// <remarks/>
        CONTAINER_EXISTS,
        
        /// <remarks/>
        CONTAINER_NOT_FOUND,
        
        /// <remarks/>
        CONTAINER_DELETED,
        
        /// <remarks/>
        CONTAINER_ACCESS_DENIED,
        
        /// <remarks/>
        CONTAINER_DOCUMENT_DUPLICATE,
        
        /// <remarks/>
        CONTAINER_PAGES_LIMIT_EXCEEDED,
        
        /// <remarks/>
        COVER_TEMPLATE_NOT_FOUND,
        
        /// <remarks/>
        COVER_TEMPLATE_DELETED,
        
        /// <remarks/>
        COVER_TEMPLATE_ACCESS_DENIED,
        
        /// <remarks/>
        FAXPRICE_NOT_FOUND,
        
        /// <remarks/>
        RESUBMIT_FAILED,
        
        /// <remarks/>
        DID_NUMBER_LOCKED,
        
        /// <remarks/>
        DID_SOURCE_NOT_FAXIN,
        
        /// <remarks/>
        DID_CUSTOMER_NOT_MATCH,
        
        /// <remarks/>
        DID_WRONG_FAXIN_STATE,
        
        /// <remarks/>
        DID_GROUP_NOT_CONNECTED,
        
        /// <remarks/>
        DID_EXTEND_TOO_EARLY,
        
        /// <remarks/>
        DID_ORDER_PENDING_ACTIVATION,
        
        /// <remarks/>
        FILE_PREVIEW_NOT_READY,
        
        /// <remarks/>
        FILE_CONVERTION_FAILED,
        
        /// <remarks/>
        FILE_PAGES_LIMIT_EXCEEDED,
        
        /// <remarks/>
        COMMON_EMAIL_SEND_ERROR,
        
        /// <remarks/>
        QUEUE_TASK_ABORTED,
        
        /// <remarks/>
        FILE_TIFF_DEPTH_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_FORMAT_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_QUALITY_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_PAGES_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_WIDTH_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_HEIGHT_VALIDATION,
        
        /// <remarks/>
        NUMBER_ADDRESS_NOT_REQUIRED,
        
        /// <remarks/>
        NUMBER_OUT_OF_STOCK,
        
        /// <remarks/>
        NUMBER_GROUP_NOT_AVAILABLE,
        
        /// <remarks/>
        NUMBER_ORDER_FAILURE,
        
        /// <remarks/>
        NUMBER_SETUP_FAILURE,
        
        /// <remarks/>
        NUMBER_ADDRESS_FAILURE,
        
        /// <remarks/>
        NUMBER_PROVIDER_NOT_RECOGNIZED,
        
        /// <remarks/>
        SESSION_TOKEN_MISMATCH,
        
        /// <remarks/>
        SESSION_NOT_FOUND,
        
        /// <remarks/>
        SESSION_EXPIRED,
        
        /// <remarks/>
        CONFIRM_TOKEN_NOT_FOUND,
        
        /// <remarks/>
        CONFIRM_TOKEN_TYPE_MISMATCH,
        
        /// <remarks/>
        CONFIRM_TOKEN_SOURCE_MISMATCH,
        
        /// <remarks/>
        CONFIRM_TOKEN_USER_MISMATCH,
        
        /// <remarks/>
        CONFIRM_TOKEN_EXPIRED,
        
        /// <remarks/>
        CONFIRM_TOKEN_VALIDATED,
        
        /// <remarks/>
        CONFIRM_TOKEN_INVALIDATED,
        
        /// <remarks/>
        CONFIRM_TOKEN_CLOSED,
        
        /// <remarks/>
        SEND_SMS_FREQUENCY_EXCEEDED,
        
        /// <remarks/>
        CONTACT_GROUP_IN_USE,
        
        /// <remarks/>
        CONTACT_GROUP_NOT_FOUND,
        
        /// <remarks/>
        CONTACT_GROUP_ACCESS_DENIED,
        
        /// <remarks/>
        CONTACT_ITEM_NOT_FOUND,
        
        /// <remarks/>
        CONTACT_ITEM_ACCESS_DENIED,
        
        /// <remarks/>
        CONTACT_NUMBER_IN_USE,
        
        /// <remarks/>
        NUMBER_ITEM_EXISTS,
        
        /// <remarks/>
        STORAGE_ALREADY_CONNECTED,
        
        /// <remarks/>
        STORAGE_REVOKE_FAILURE,
        
        /// <remarks/>
        STORAGE_NOT_CONNECTED,
        
        /// <remarks/>
        STORAGE_NOT_FOUND,
        
        /// <remarks/>
        INSUFFICIENT_FUNDS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class ApiResponseListDids : ApiResponse {
        
        private int countResultField;
        
        private bool countResultFieldSpecified;
        
        private int countTotalField;
        
        private bool countTotalFieldSpecified;
        
        private FaxDid[] itemsField;
        
        /// <remarks/>
        public int countResult {
            get {
                return this.countResultField;
            }
            set {
                this.countResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countResultSpecified {
            get {
                return this.countResultFieldSpecified;
            }
            set {
                this.countResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int countTotal {
            get {
                return this.countTotalField;
            }
            set {
                this.countTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countTotalSpecified {
            get {
                return this.countTotalFieldSpecified;
            }
            set {
                this.countTotalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public FaxDid[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class ApiResponseListDidGroups : ApiResponse {
        
        private int countResultField;
        
        private bool countResultFieldSpecified;
        
        private int countTotalField;
        
        private bool countTotalFieldSpecified;
        
        private FaxDidGroup[] itemsField;
        
        /// <remarks/>
        public int countResult {
            get {
                return this.countResultField;
            }
            set {
                this.countResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countResultSpecified {
            get {
                return this.countResultFieldSpecified;
            }
            set {
                this.countResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int countTotal {
            get {
                return this.countTotalField;
            }
            set {
                this.countTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countTotalSpecified {
            get {
                return this.countTotalFieldSpecified;
            }
            set {
                this.countTotalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FaxDidGroup[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class ApiResponseListCountryStates : ApiResponse {
        
        private int countResultField;
        
        private bool countResultFieldSpecified;
        
        private int countTotalField;
        
        private bool countTotalFieldSpecified;
        
        private FaxCountryState[] itemsField;
        
        /// <remarks/>
        public int countResult {
            get {
                return this.countResultField;
            }
            set {
                this.countResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countResultSpecified {
            get {
                return this.countResultFieldSpecified;
            }
            set {
                this.countResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int countTotal {
            get {
                return this.countTotalField;
            }
            set {
                this.countTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countTotalSpecified {
            get {
                return this.countTotalFieldSpecified;
            }
            set {
                this.countTotalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public FaxCountryState[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceFxiInventory")]
    public partial class ApiResponseListCountries : ApiResponse {
        
        private int countResultField;
        
        private bool countResultFieldSpecified;
        
        private int countTotalField;
        
        private bool countTotalFieldSpecified;
        
        private FaxCountry[] itemsField;
        
        /// <remarks/>
        public int countResult {
            get {
                return this.countResultField;
            }
            set {
                this.countResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countResultSpecified {
            get {
                return this.countResultFieldSpecified;
            }
            set {
                this.countResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int countTotal {
            get {
                return this.countTotalField;
            }
            set {
                this.countTotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool countTotalSpecified {
            get {
                return this.countTotalFieldSpecified;
            }
            set {
                this.countTotalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public FaxCountry[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listCountriesCompletedEventHandler(object sender, listCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiResponseListCountries Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiResponseListCountries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listStatesCompletedEventHandler(object sender, listStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiResponseListCountryStates Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiResponseListCountryStates)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listDidGroupsCompletedEventHandler(object sender, listDidGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listDidGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listDidGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiResponseListDidGroups Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiResponseListDidGroups)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDidGroupCompletedEventHandler(object sender, getDidGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDidGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDidGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiResponseListDidGroups Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiResponseListDidGroups)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listDidsCompletedEventHandler(object sender, listDidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listDidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listDidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiResponseListDids Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiResponseListDids)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591